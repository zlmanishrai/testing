// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student{
  id        Int @default(autoincrement()) @id
  email     String @unique
  name      String
  password  String
  courseId  Int
  Course    Course @relation(fields: [courseId], references: [id])
}

model Course{
  id        Int @default(autoincrement()) @id
  name      String
  student   Student[]
  subject   Subject[]
}

model Subject{
  id        Int @default(autoincrement()) @id
  name      String
  courseId  Int
  course    Course @relation(fields: [courseId], references: [id])
}

// model CourseSubject{
//   id        Int @default(autoincrement()) @id
//   courseId  Int
//   Subj

// }



// model Post{
//   id          Int @default(autoincrement()) @id
//   title       String
//   like        Like[]
// }

// model Like{
//   userId      Int
//   user        User @relation(fields: [userId], references: [id])
//   postId      Int
//   post        Post @relation(fields: [postId], references: [id])


//   @@id([userId, postId])
// }



model User{
  id          Int @id @default(autoincrement())
  name        String
  email       String @unique
  // password    String
  bio         Bio?
}

model Bio {
  id                  Int @id @default(autoincrement())
  // coverImageUrl     String
  // profileImageUrl   String
  // imageUrls         String[]
  description         String
  userId              Int @unique
  user                User @relation(fields: [userId], references: [id])
  bioHighlights       BioHighlight[]
}


model Highlight {
  id                Int @id @default(autoincrement())
  name              String
  imageUrl          String
  bioHighlights     BioHighlight[]
}

model BioHighlight {
  bioId             Int
  bio               Bio @relation(fields: [bioId], references: [id])
  highlightId       Int
  highlight         Highlight @relation(fields: [highlightId], references: [id])

  @@id(name: "bioHighlightId", [bioId, highlightId])
}